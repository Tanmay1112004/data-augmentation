# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sL0Eml9JOyyauBJZMZfEBBPEDtutQvDn
"""

# Install gradio if not already
!pip install gradio --quiet

import gradio as gr
import numpy as np
import tensorflow as tf
from tensorflow.keras.preprocessing.image import ImageDataGenerator, img_to_array, array_to_img

# Function for augmentation
def augment_image(
    image,
    rotation=40,
    width_shift=0.2,
    height_shift=0.2,
    shear=0.2,
    zoom=0.2,
    horizontal_flip=True,
    fill_mode="reflect",
    num_samples=5
):
    if image is None:
        return []

    # Convert PIL image to numpy
    x = img_to_array(image)
    x = x.reshape((1,) + x.shape)

    datagen = ImageDataGenerator(
        rotation_range=rotation,
        width_shift_range=width_shift,
        height_shift_range=height_shift,
        shear_range=shear,
        zoom_range=zoom,
        horizontal_flip=horizontal_flip,
        fill_mode=fill_mode
    )

    # Generate augmented images
    images = []
    i = 0
    for batch in datagen.flow(x, batch_size=1):
        img = array_to_img(batch[0], scale=True)
        images.append(img)
        i += 1
        if i >= num_samples:
            break
    return images

# Build Gradio UI
with gr.Blocks(css=".gradio-container {background-color: #f9fafb;}") as demo:
    gr.Markdown("<h1 style='text-align: center; color:#4A90E2;'>âœ¨ Image Data Augmentation Playground âœ¨</h1>")
    gr.Markdown("Upload an image and play around with augmentation parameters. Preview augmented images instantly!")

    with gr.Row():
        with gr.Column(scale=1):
            input_image = gr.Image(type="pil", label="Upload Image")
            rotation = gr.Slider(0, 90, value=40, step=1, label="Rotation Range")
            width_shift = gr.Slider(0, 0.5, value=0.2, step=0.05, label="Width Shift Range")
            height_shift = gr.Slider(0, 0.5, value=0.2, step=0.05, label="Height Shift Range")
            shear = gr.Slider(0, 0.5, value=0.2, step=0.05, label="Shear Range")
            zoom = gr.Slider(0, 0.5, value=0.2, step=0.05, label="Zoom Range")
            horizontal_flip = gr.Checkbox(value=True, label="Enable Horizontal Flip")
            fill_mode = gr.Dropdown(["nearest", "reflect", "wrap", "constant"], value="reflect", label="Fill Mode")
            num_samples = gr.Slider(1, 10, value=5, step=1, label="Number of Augmented Images")

            augment_button = gr.Button("ðŸš€ Augment Image")

        with gr.Column(scale=2):
            output_gallery = gr.Gallery(label="Augmented Images", columns=3, height="auto")

    augment_button.click(
        augment_image,
        inputs=[input_image, rotation, width_shift, height_shift, shear, zoom, horizontal_flip, fill_mode, num_samples],
        outputs=output_gallery
    )

# Launch the app
demo.launch(share=True)